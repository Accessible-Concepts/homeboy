{"version":3,"sources":["pages/Home.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["Main","Jumbotron","className","Button","variant","size","Container","CardDeck","Col","lg","Card","Header","Title","Img","src","Body","Text","Footer","block","React","Component","Home","Navigation","isLoggedIn","this","props","Navbar","fixed","collapseOnSelect","expand","Row","sm","xs","Brand","href","alt","Collapse","id","Nav","Link","eventKey","Toggle","aria-controls","App","state","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.75282da3.chunk.js","sourcesContent":["import React from 'react';\n//import './Home.css';\n\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport CardDeck from 'react-bootstrap/CardDeck'\nimport Card from 'react-bootstrap/Card'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\n\n\nclass Main extends React.Component {\n    \n  render () {\n\n    return (\n      <main>\n        <Jumbotron className=\"hero text-center\">\n          <h1>Welcome to Homeboy - Your Building Management Buddy!</h1>\n          <p>\n          With our groundbreaking Homeowner Association Management System,\n          communication between tenants and the homeowner association committee has never been easier!\n          </p>\n          <p>\n            <Button variant=\"primary\" size=\"lg\" className=\"px-5 py-2\">Sign Up - It's Free!</Button>\n          </p>\n        </Jumbotron>\n        <Container className=\"featureWrapper text-center mt-4\">\n          <h2>Love Thy Neighbor</h2>\n          <p>\n          Use Homeboy to make it good in the hood! Weâ€™ve got the features you need to avoid gang fights and promote happy neighboring!\n          </p>\n          <CardDeck>\n            <Col lg={4}>\n              <Card>\n                  <Card.Header>\n                    <Card.Title>Issue Management</Card.Title>\n                  </Card.Header>\n                  <Card.Img variant=\"top\" src=\"./images/issue-management.png\" />\n                  <Card.Body>\n                    <Card.Text>\n                    Striving to achieve structured tracking for issues reported by homies?\n                    </Card.Text>\n                  </Card.Body>\n                  <Card.Footer className=\"border-0\">\n                    <Button variant=\"primary\" block>Make It Work</Button>\n                  </Card.Footer>\n                </Card>\n              </Col>\n              <Col lg={4}>\n                <Card>\n                  <Card.Header>\n                    <Card.Title>Easy Messaging</Card.Title>\n                  </Card.Header>\n                  <Card.Img variant=\"top\" src=\"./images/messaging.png\" />\n                  <Card.Body>\n                    <Card.Text>\n                    Begging for homies to pay attention to messages from the building's committee?\n                    </Card.Text>\n                  </Card.Body>\n                  <Card.Footer className=\"border-0\">\n                    <Button variant=\"primary\" block>Make It Happen</Button>\n                  </Card.Footer>\n                </Card>\n              </Col>\n              <Col lg={4}>\n                <Card>\n                  <Card.Header>\n                    <Card.Title>Open Voting</Card.Title>\n                  </Card.Header>\n                  <Card.Img variant=\"top\" src=\"./images/voting.png\" />\n                  <Card.Body>\n                    <Card.Text>\n                    Dreaming of improving the way financial desicions are made in your building? \n                    </Card.Text>\n                  </Card.Body>\n                  <Card.Footer className=\"border-0\">\n                    <Button variant=\"primary\" block>Make It Count</Button>\n                  </Card.Footer>\n              </Card>\n            </Col>\n          </CardDeck>      \n      </Container>\n      </main>\n    );\n  }\n}\n\nclass Home extends React.Component {\n  render () {\n    return (\n      <div className=\"Home\">\n        <Main />\n      </div>\n    );\n}\n}\n\nexport default Home;\n","import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\nclass Navigation extends React.Component {\n    \n    render () {\n\n        const isLoggedIn = this.props.isLoggedIn;\n        \n        return (\n            <Navbar fixed=\"top\" collapseOnSelect expand=\"lg\">\n              <Row className=\"w-100\">\n                    <Col lg={1} sm= {4} xs={4}>\n                      <Navbar.Brand href=\"#home\"><img className=\"App-logo\" src=\"./images/homeboy.png\" alt=\"Homeboy - Your Buddy In Da Building\" /></Navbar.Brand>\n                    </Col>\n                   \n                  <Col lg={11} sm= {4} xs={4} className=\"px-0\">\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\n                        <Nav className={isLoggedIn? \"mr-auto\" : \"hide\"}>\n                          <Nav.Link href=\"#Dashboard\">Dashboard</Nav.Link>\n                          <Nav.Link href=\"#Tenants\">Tenants</Nav.Link>\n                          <Nav.Link href=\"#Messages\">Messages</Nav.Link>\n                          <Nav.Link href=\"#Issues\">Issues</Nav.Link>\n                          <Nav.Link href=\"#Voting\">Voting</Nav.Link>\n                        </Nav>\n\n                        <Nav className={isLoggedIn? \"hide\" : \"ml-auto\"}>\n                            <Nav.Link href=\"#Login\">Login</Nav.Link>\n                            <Nav.Link eventKey={2} href=\"#SignUp\">\n                            Sign Up\n                            </Nav.Link>\n                        </Nav>\n\n                        <Nav className={isLoggedIn? \"ml-auto\" : \"hide\"}>\n                            <Nav.Link href=\"#Logout\">Logout</Nav.Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                  </Col>\n\n                  <Col sm= {4} xs={4} className=\"text-right px-0\">\n                      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                  </Col>\n                \n              </Row>\n          </Navbar>\n  \n        );     \n    }\n}\n\n\n  \nexport default Navigation;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Home from './pages/Home';\nimport Navigation from './components/Navigation'\n\n//import SignUp from './pages/SignUp';\n//import Login from './pages//Login';\n//import Messages from './pages/Messages';\n//import Tenants from './pages/Tenants';\n//import Votings from './pages/Votings';\n//import Issues from './pages/Issues';\n//import CommitteeDashboard from './pages/CommitteeDashboard';\n// import TenantDashboard from './pages/TenantDashboard';\n//import TenantDashboard from './pages/TenantDashboard';\n\n\n\nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false\n  };\n}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navigation isLoggedIn={this.state.isLoggedIn}/>\n        <Home isLoggedIn={this.state.isLoggedIn}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}