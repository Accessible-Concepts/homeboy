{"version":3,"sources":["components/Navigation.js","pages/Home.js","components/UserDB.js","components/PaginationNav.js","components/DashboardIssuesAccordion.js","components/TenantsAccordion.js","components/MessagesAccordion.js","components/DashboardNewMessagesAccordion.js","components/VotingsAccordion.js","components/PendingVotingsAccordion.js","components/RecordsDisplay.js","components/ChartsDisplay.js","pages/CommitteeDashboard.js","pages/SignUp.js","pages/Login.js","components/MessagesNavbar.js","components/TenantsNavbar.js","pages/Messages.js","components/VotingsNav.js","pages/Tenants.js","components/IssuesNavbar.js","pages/Votings.js","App.js","components/IssuesAccordion.js","pages/Issues.js","pages/TenantDashboard.js","serviceWorker.js","index.js"],"names":["Navigation","logo","this","props","pageName","isLoggedIn","Navbar","fixed","collapseOnSelect","expand","Row","className","Col","lg","sm","xs","Brand","href","src","alt","Collapse","id","Nav","Link","eventKey","Toggle","aria-controls","React","Component","Main","Jumbotron","Button","variant","size","Container","CardDeck","Card","Header","Title","Img","Body","Text","Footer","block","Parse","require","serverURL","initialize","UserDB","GetUser","User","SignUpCommitteeMember","user","onSuccess","onError","set","signUp","then","catch","error","CreateTenant","current","get","sessionToken","become","Error","LogIn","email","password","logIn","console","log","LogOut","logOut","GetAllUsers","UserClass","Object","extend","Query","find","results","FindUserByEmail","query","equalTo","GetCurrentUser","GetCurrentUserName","PaginationNav","state","activePage","totalItemsCount","handlePageChange","bind","e","val","parseInt","target","innerHTML","pageNumber","isNaN","innerText","includes","setState","pages","Math","ceil","items","number","push","Pagination","Item","key","active","paginationBasic","onClick","Prev","disabled","Next","DashboardIssuesAccordion","Accordion","as","TenantsAccordion","MessagesAccordion","Form","Control","rows","placeholder","DashboardNewMessagesAccordion","VotingsAccordion","votingAccordion","votingStatus","placeholderText","withPortal","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","Group","controlId","Label","column","required","value","type","data","title","color","PendingVotingsAccordion","Records","accordion","recordType","NoRecords","RecordsDisplay","hasRecords","ChartsDisplay","CommitteeDashboard","fluid","Badge","Login","MessagesNavbar","onChange","handleChange","name","checked","for","TenantsNavbar","VotingsNavbar","IssuesNavbar","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.47eb9971.chunk.js","sourcesContent":["import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\nclass Navigation extends React.Component {\n    \n    render () {\n        const logo = (this.props.pageName === \"Home\"? \"App-logo\" : \"App-logo-inner\");\n        const isLoggedIn = this.props.isLoggedIn;\n        \n        return (\n            <Navbar fixed=\"top\" collapseOnSelect expand=\"lg\">\n              <Row className=\"w-100\">\n                    <Col lg={1} sm= {4} xs={4}>\n                      <Navbar.Brand href=\"#home\"><img className={logo} src=\"./images/homeboy.png\" alt=\"Homeboy - Your Buddy In Da Building\" /></Navbar.Brand>\n                    </Col>\n                   \n                  <Col lg={11} sm= {4} xs={4} className=\"px-0\">\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\n                        <Nav className={isLoggedIn? \"mr-auto\" : \"hide\"}>\n                          <Nav.Link href=\"#Dashboard\">Dashboard</Nav.Link>\n                          <Nav.Link href=\"#Tenants\">Tenants</Nav.Link>\n                          <Nav.Link href=\"#Messages\">Messages</Nav.Link>\n                          <Nav.Link href=\"#Issues\">Issues</Nav.Link>\n                          <Nav.Link href=\"#Voting\">Voting</Nav.Link>\n                        </Nav>\n\n                        <Nav className={isLoggedIn? \"hide\" : \"ml-auto\"}>\n                            <Nav.Link href=\"#Login\">Login</Nav.Link>\n                            <Nav.Link eventKey={2} href=\"#SignUp\">\n                            Sign Up\n                            </Nav.Link>\n                        </Nav>\n\n                        <Nav className={isLoggedIn? \"ml-auto\" : \"hide\"}>\n                            <Nav.Link href=\"#Logout\">Logout</Nav.Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                  </Col>\n\n                  <Col sm= {4} xs={4} className=\"text-right px-0\">\n                      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                  </Col>\n                \n              </Row>\n          </Navbar>\n  \n        );     \n    }\n}\n\n\n  \nexport default Navigation;","import React from 'react';\n//import './Home.css';\n\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport CardDeck from 'react-bootstrap/CardDeck'\nimport Card from 'react-bootstrap/Card'\nimport Col from 'react-bootstrap/Col'\nimport Navigation from '../components/Navigation'\nimport Container from 'react-bootstrap/Container'\n\n\nclass Main extends React.Component {\n    \n  render () {\n\n    return (\n      <main>\n        <Jumbotron className=\"hero text-center\">\n          <h1>Welcome to Homeboy - Your Building Management Buddy!</h1>\n          <p>\n          With our groundbreaking Homeowner Association Management System,\n          communication between tenants and the homeowner association committee has never been easier!\n          </p>\n          <p>\n            <Button variant=\"primary\" size=\"lg\" className=\"px-5 py-2\">Sign Up - It's Free!</Button>\n          </p>\n        </Jumbotron>\n        <Container className=\"featureWrapper text-center mt-4\">\n          <h2>Love Thy Neighbor</h2>\n          <p>\n          Use Homeboy to make it good in the hood! We’ve got the features you need to avoid gang fights and promote happy neighboring!\n          </p>\n          <CardDeck>\n            <Col lg={4}>\n              <Card>\n                  <Card.Header>\n                    <Card.Title>Issue Management</Card.Title>\n                  </Card.Header>\n                  <Card.Img variant=\"top\" src=\"./images/issue-management.png\" />\n                  <Card.Body>\n                    <Card.Text>\n                    Striving to achieve structured tracking for issues reported by homies?\n                    </Card.Text>\n                  </Card.Body>\n                  <Card.Footer className=\"border-0\">\n                    <Button variant=\"primary\" block>Make It Work</Button>\n                  </Card.Footer>\n                </Card>\n              </Col>\n              <Col lg={4}>\n                <Card>\n                  <Card.Header>\n                    <Card.Title>Easy Messaging</Card.Title>\n                  </Card.Header>\n                  <Card.Img variant=\"top\" src=\"./images/messaging.png\" />\n                  <Card.Body>\n                    <Card.Text>\n                    Begging for homies to pay attention to messages from the building's committee?\n                    </Card.Text>\n                  </Card.Body>\n                  <Card.Footer className=\"border-0\">\n                    <Button variant=\"primary\" block>Make It Happen</Button>\n                  </Card.Footer>\n                </Card>\n              </Col>\n              <Col lg={4}>\n                <Card>\n                  <Card.Header>\n                    <Card.Title>Open Voting</Card.Title>\n                  </Card.Header>\n                  <Card.Img variant=\"top\" src=\"./images/voting.png\" />\n                  <Card.Body>\n                    <Card.Text>\n                    Dreaming of improving the way financial desicions are made in your building? \n                    </Card.Text>\n                  </Card.Body>\n                  <Card.Footer className=\"border-0\">\n                    <Button variant=\"primary\" block>Make It Count</Button>\n                  </Card.Footer>\n              </Card>\n            </Col>\n          </CardDeck>      \n      </Container>\n      </main>\n    );\n  }\n}\n\nclass Home extends React.Component {\n  render () {\n    return (\n      <div className=\"Home\">\n        <Navigation isLoggedIn={this.props.isLoggedIn} pageName=\"Home\"/>\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","var Parse = require('parse');\n\nInitialize();\n\n\nfunction Initialize() {\n  Parse.serverURL = 'https://parseapi.back4app.com'; // This is your Server URL\n  Parse.initialize(\n    'EjBHB6eHkPYe1zSnuvjLgLnAcimFgedDdkTQKKMp', // This is your Application ID\n    'x2qBBi1Ms1YMtws1NreUEgGsmFrrx13zuyZcxLRR' // This is your Javascript key\n  );\n}\n\nconst UserDB = {\n\n  GetUser: function GetUser() {\n    return new Parse.User()\n  },\n\n  SignUpCommitteeMember: function SignUpCommitteeMember(user, onSuccess, onError){\n    user.set('isCommitteeMember', true);\n    user.signUp().then((user) => {\n      onSuccess(user);\n    }).catch(error => {\n      onError(error);\n    });\n  },\n\n  CreateTenant: function CreateTenant(user, onSuccess, onError){\n    //Check if I'm logged in as a committee member.\n    if ((Parse.User.current() == null) || (!Parse.User.current().get(\"isCommitteeMember\"))) {\n      onError(new Error(\"Not logged in as committee member.\"))\n      return;\n    }\n    \n    //I save this user session for use later so I can revert back to who I am.\n    var sessionToken = Parse.User.current().get(\"sessionToken\");\n    user.set('isCommitteeMember', false);\n    user.signUp().then((user) => {\n      Parse.User.become(sessionToken).then((user) => {\n        // The current user is now set back to creator.\n        onSuccess(user);\n      }).catch(error => {\n        onError(error);\n      });\n    }).catch(error => {\n      onError(error);\n    });\n  },\n\n  LogIn: function LogIn(email, password, onSuccess, onError) {\n    // Pass the username and password to logIn function\n    Parse.User.logIn(\"newUserName\",\"#Password123\").then((user) => {\n      // Do stuff after successful login\n      onSuccess(user);\n      console.log('Logged in user', user);\n    }).catch(error => {\n      onError(error);\n      console.error('Error while logging in user', error);\n    })\n  },\n\n  LogOut: function LogOut(onSuccess, onError) {\n    // Pass the username and password to logIn function\n    Parse.User.logOut().then(() => {\n      // Do stuff after successful login\n      onSuccess();\n      console.log('Logged out');\n    }).catch(error => {\n      onError(error);\n      console.error('Error while logging in user', error);\n    })\n  },\n\n  GetAllUsers: function GetAllUsers(onSuccess, onError) {\n\n    const UserClass = Parse.Object.extend(\"User\");\n\n    // Creates a new Query object to help us fetch UserClass objects\n    const query = new Parse.Query(UserClass);\n\n    // Executes the query, which returns an array of UserClass\n    query.find().then(results => {\n      onSuccess(results);\n    }).catch((error) =>  {\n      onError(error);\n      console.error('Error while trying to GetAllUsers', error);\n\n    });\n  },\n\n  FindUserByEmail: function FindUserByEmail(email, onSuccess, onError) {\n\n    const UserClass = Parse.Object.extend(\"User\");\n\n    // Creates a new Query object to help us fetch UserClass objects\n    const query = new Parse.Query(UserClass);\n\n    query.equalTo(\"email\", email);\n\n    // Executes the query, which returns an array of UserClass\n    query.find().then(results => {\n      onSuccess(results);\n    }).catch((error) =>  {\n      onError(error);\n      console.error('Error while trying to FindUserByEmail', error);\n\n    });\n  },\n\n  GetCurrentUser: function GetCurrentUser() {\n    return Parse.User.current();\n  },\n\n  GetCurrentUserName: function GetCurrentUserName() {\n    if (Parse.User.current() != null) {\n      return Parse.User.current().get('username');\n    } else {\n      return \"\";\n    }\n  }\n\n}\n\n\nexport default UserDB;\n","import React from 'react'\r\nimport Pagination from 'react-bootstrap/Pagination'\r\n//import Container from 'react-bootstrap/Container';\r\n\r\nclass PaginationNav extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activePage: 1,\r\n      totalItemsCount: 100 // This will come from the relevant page: Issues\\votings\\issues etc, where the total number of records will be stored in the page's state.\r\n    };\r\n\r\n    this.handlePageChange = this.handlePageChange.bind(this);\r\n  }\r\n  \r\n  handlePageChange(e) {\r\n    let val = parseInt(e.target.innerHTML);\r\n    let pageNumber = this.state.activePage;\r\n\r\n    if (isNaN(val)) {\r\n      console.log('Not a number ' + val);\r\n      val = e.target.innerText;\r\n      if (val.includes(\"‹\")) {\r\n        console.log(\"Previous\");\r\n        pageNumber--;\r\n      }\r\n      else if (val.includes(\"›\")) {\r\n        console.log(\"Next\");\r\n        pageNumber++;\r\n      }\r\n      \r\n    }\r\n    else {\r\n      console.log('number ' + val);\r\n      pageNumber =  val;\r\n    }\r\n    console.log('active page is ' + pageNumber);\r\n    //this.state.activePage = pageNumber;\r\n    console.log(this.state.activePage);\r\n    //this.setState(this.state);\r\n    this.setState({activePage:pageNumber});\r\n    console.log(this.state.activePage);\r\n  }\r\n  \r\n  render() {\r\n  //   const handlePageChange = props.handlePageChange;\r\n    // const activePage = props.activePage;\r\n    const activePage = this.state.activePage;\r\n    //const totalItemsCount = parseInt(props.totalItemsCount);\r\n    const totalItemsCount = parseInt(this.state.totalItemsCount);\r\n    const itemsCountPerPage = 10;\r\n    \r\n    let pages = Math.ceil(totalItemsCount / itemsCountPerPage);\r\n    let items = []; \r\n    for (let number = 1; number <= pages; number++) {\r\n    items.push(\r\n        <Pagination.Item key={number} active={number === activePage}>\r\n            {number}\r\n        </Pagination.Item>,\r\n         );\r\n    }\r\n\r\n    const paginationBasic = (\r\n                <Pagination size=\"sm\" onClick={this.handlePageChange} className={pages === 1 ? 'hide' : ''}>\r\n                      <Pagination.Prev disabled={activePage === 1 ? true : false}/> \r\n                      {items}\r\n                      <Pagination.Next disabled={activePage === pages ? true : false}/>\r\n                </Pagination>\r\n            );\r\n  \r\n\r\n    return (\r\n      <div className=\"PaginationNav\">\r\n        {paginationBasic}    \r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n  export default PaginationNav;","import React from 'react'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass DashboardIssuesAccordion extends React.Component {\r\n    \r\n    render () {\r\n\r\n        return (\r\n                    <Accordion>\r\n                        <Card>\r\n                            <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"font-weight-bold\">\r\n                            Dynamic Issue Title With Dynamic Icon 2\r\n                            <i className=\"fas fa-exclamation-circle float-right\"></i>\r\n                            </Accordion.Toggle>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Row>\r\n                                                <Col lg={4}>\r\n                                                    <Card.Img src=\"https://upload.wikimedia.org/wikipedia/commons/9/92/Backyardpool.jpg\"/>\r\n                                                </Col>\r\n                                                <Col lg={8}>                    \r\n                                                    <Card.Text>\r\n                                                        <li className=\"list-group-item\"><span className=\"font-weight-bold\">Details: </span>***Dynamic Content for Issue details**</li>\r\n                                                    </Card.Text>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>                             \r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>     \r\n            </Accordion>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DashboardIssuesAccordion;","import React from 'react'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n//import Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass TenantsAccordion extends React.Component {\n \n    render() {\n        return (\n           <div className=\"TenantsAccordion\">\n               <Accordion>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"font-weight-bold\">\n                        Dynamic Tenant Name\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"0\">\n                            <Card.Body>\n                                <Row>\n                                    <Col>\n                                        <Row>\n                                            <Col lg={4}>\n                                                <Card.Img src=\"https://upload.wikimedia.org/wikipedia/commons/9/92/Backyardpool.jpg\"/>\n                                            </Col>\n                                            <Col lg={8}>                    \n                                                <Card.Text>\n                                                    <li className=\"list-group-item\"><span className=\"font-weight-bold\">Name: </span>**Dynamic Tenant Name**</li>\n                                                    <li className=\"list-group-item\"><span  className=\"font-weight-bold\">Email: </span>**Dynamic Tenant Email**</li>\n                                                    <li className=\"list-group-item\"><span  className=\"font-weight-bold\">Apt: </span>**Dynamic Apt**</li>\n                                                </Card.Text>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col className=\"p-0 d-flex align-items-end justify-content-end\">\n                                        <Button variant=\"outline-dark\" className=\"mx-2 align-bottom\">Update</Button>\n                                        <Button variant=\"danger\" className=\"mx-2  align-bottom\">Delete</Button>\n                                    </Col>\n                                </Row>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"1\" className=\"font-weight-bold\">\n                        Dynamic Tenant Name2\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"1\">\n                            <Card.Body>\n                                <Row>\n                                    <Col>\n                                        <Row>\n                                            <Col lg={4}>\n                                                <Card.Img src=\"https://upload.wikimedia.org/wikipedia/commons/9/92/Backyardpool.jpg\"/>\n                                            </Col>\n                                            <Col lg={8}>                    \n                                                <Card.Text>\n                                                    <li className=\"list-group-item\"><span className=\"font-weight-bold\">Name: </span>**Dynamic Tenant Name2**</li>\n                                                    <li className=\"list-group-item\"><span  className=\"font-weight-bold\">Email: </span>**Dynamic Tenant Email2**</li>\n                                                    <li className=\"list-group-item\"><span  className=\"font-weight-bold\">Apt: </span>**Dynamic Apt2**</li>\n                                                </Card.Text>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col className=\"p-0 d-flex align-items-end justify-content-end\">\n                                        <Button variant=\"outline-dark\" className=\"mx-2 align-bottom\">Update</Button>\n                                        <Button variant=\"danger\" className=\"mx-2  align-bottom\">Delete</Button>\n                                    </Col>\n                                </Row>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>                     \n                </Accordion>\n           </div>\n        );\n    }\n}\n\nexport default TenantsAccordion;","import React from 'react'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass MessagesAccordion extends React.Component {\n    constructor(props) {\n        super(props);\n    }    \n\n    render() {\n        return (\n           <div className=\"MessagesAccordion\">\n               <Accordion>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"font-weight-bold\">\n                        Dynamic Message Title With Dynamic Icon\n                        <i className=\"fas fa-info-circle float-right\"></i>\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"0\">\n                            <Card.Body>\n                                <Row>\n                                    <Col className=\"border-2\">\n                                        <Row>\n                                            <Col lg={4}>\n                                                <Card.Img src=\"https://upload.wikimedia.org/wikipedia/commons/9/92/Backyardpool.jpg\"/>\n                                            </Col>\n                                            <Col lg={8}>                    \n                                                <Card.Text>\n                                                    <li className=\"list-group-item\"><span className=\"font-weight-bold\">Details: </span>**Dynamic Content for message details**</li>\n                                                    <li className=\"list-group-item\"><span  className=\"font-weight-bold\">Priority: </span>**Dynamic Content for message details**</li>\n                                                </Card.Text>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col>\n                                        <h6>Comments:</h6>\n                                    </Col>\n                                </Row>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>                     \n                    <Card>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"1\" className=\"font-weight-bold\">\n                        Dynamic Message Title With Dynamic Icon 2\n                        <i className=\"fas fa-exclamation-circle float-right\"></i>\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"1\">\n                            <Card.Body>\n                                <Row>\n                                    <Col className=\"border-2\">\n                                        <Row>\n                                            <Col lg={4}>\n                                                <Card.Img src=\"https://upload.wikimedia.org/wikipedia/commons/9/92/Backyardpool.jpg\"/>\n                                            </Col>\n                                            <Col lg={8}>                    \n                                                <Card.Text>\n                                                    <li className=\"list-group-item\"><span className=\"font-weight-bold\">Details: </span>**Dynamic Content for message details**</li>\n                                                    <li className=\"list-group-item\"><span  className=\"font-weight-bold\">Priority: </span>**Dynamic Content for message details**</li>\n                                                </Card.Text>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col>\n                                        <Row>\n                                            <Col lg={8}>\n                                                <h6>Comments:</h6>\n                                                <Row className=\"Comment mt-4 my-2 mx-0\">                                            \n                                                    <Col lg={2} className=\"p-0\">\n                                                        <img className=\"rounded-circle avatar\" src=\"https://mdbootstrap.com/img/Photos/Avatars/avatar-10.jpg\" alt=\"Avatar\"></img>\n                                                    </Col>\n                                                    <Col lg={10} className=\"pl-0\">\n                                                        <h7 className=\"font-weight-bold\">Dynamic Tenant Name:</h7>\n                                                        <p>Dynamic comment text</p>\n                                                    </Col>\n                                                </Row>\n                                                <Row className=\"Comment mt-4 my-2 mx-0\">                                            \n                                                    <Col lg={2} className=\"p-0\">\n                                                        <img className=\"rounded-circle avatar\" src=\"https://mdbootstrap.com/img/Photos/Avatars/avatar-10.jpg\" alt=\"Avatar\"></img>\n                                                    </Col>\n                                                    <Col lg={10} className=\"pl-0\">\n                                                        <h7 className=\"font-weight-bold\">Dynamic Tenant Name 2:</h7>\n                                                        <p>Dynamic comment text 2</p>\n                                                        <div className=\"responses\">\n                                                            Dynamic responses\n                                                            <Row className=\"Comment mt-4 my-2 mx-0\">                                            \n                                                                <Col lg={2} className=\"p-0\">\n                                                                    <img className=\"rounded-circle avatar\" src=\"https://mdbootstrap.com/img/Photos/Avatars/avatar-10.jpg\" alt=\"Avatar\"></img>\n                                                                </Col>\n                                                                <Col lg={10} className=\"pl-0\">\n                                                                    <h7 className=\"font-weight-bold\">Dynamic responder Name 1 :</h7>\n                                                                    <p>Dynamic response text 1</p>\n                                                                    <a href=\"#\">Reply</a>\n                                                                    <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Write your response\" className=\"mt-1\"/> \n                                                                </Col>\n                                                            </Row>\n                                                        </div>\n                                                        <a href=\"#\">Reply</a>\n                                                        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Write your response\" className=\"mt-1\"/> \n                                                    </Col>\n                                                </Row>\n                                                <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Write a comment\" className=\"mt-4\"/>                   \n                                            </Col>\n                                            <Col lg={4} className=\"p-0 d-flex align-items-end justify-content-end\">\n                                                <Button variant=\"outline-dark\" className=\"mx-2 align-bottom\">Update</Button>\n                                                <Button variant=\"danger\" className=\"mx-2  align-bottom\">Delete</Button>\n                                            </Col>\n                                        </Row>                                                           \n                                    </Col>\n                                </Row>                             \n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>     \n                </Accordion>\n           </div>\n        );\n    }\n}\n\nexport default MessagesAccordion;","import React from 'react'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n// import Form from 'react-bootstrap/Form'\n// import Button from 'react-bootstrap/Button'\n\nclass DashboardNewMessagesAccordion extends React.Component {\n   \n    render() {\n        return (\n           <div className=\"DashboardNewMessagesAccordion\">\n               <Accordion>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"font-weight-bold\">\n                        Dynamic Message Title With Dynamic Icon\n                        <i className=\"fas fa-info-circle float-right\"></i>\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"0\">\n                            <Card.Body>\n                                <Row>\n                                    <Col>\n                                        <Row>\n                                            <Col lg={4}>\n                                                <Card.Img src=\"https://upload.wikimedia.org/wikipedia/commons/9/92/Backyardpool.jpg\"/>\n                                            </Col>\n                                            <Col lg={8}>                    \n                                                <Card.Text>\n                                                    <li className=\"list-group-item\"><span className=\"font-weight-bold\">Details: </span>**Dynamic Content for message details**</li>\n                                                    <li className=\"list-group-item\"><span  className=\"font-weight-bold\">Priority: </span>**Dynamic Content for message details**</li>\n                                                </Card.Text>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>                     \n                    <Card>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"1\" className=\"font-weight-bold\">\n                        Dynamic Message Title With Dynamic Icon 2\n                        <i className=\"fas fa-exclamation-circle float-right\"></i>\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"1\">\n                            <Card.Body>\n                                <Row>\n                                    <Col>\n                                        <Row>\n                                            <Col lg={4}>\n                                                <Card.Img src=\"https://upload.wikimedia.org/wikipedia/commons/9/92/Backyardpool.jpg\"/>\n                                            </Col>\n                                            <Col lg={8}>                    \n                                                <Card.Text>\n                                                    <li className=\"list-group-item\"><span className=\"font-weight-bold\">Details: </span>**Dynamic Content for message details**</li>\n                                                    <li className=\"list-group-item\"><span  className=\"font-weight-bold\">Priority: </span>**Dynamic Content for message details**</li>\n                                                </Card.Text>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>                             \n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>     \n                </Accordion>\n           </div>\n        );\n    }\n}\n\nexport default DashboardNewMessagesAccordion;","import React from 'react'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport PieChart from 'react-minimal-pie-chart'\nimport DatePicker from \"react-datepicker\"\nimport 'react-datepicker/dist/react-datepicker.css'\n\n\nclass VotingsAccordion extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }    \n\n    render() {\n        const votingAccordion = (\n            <Accordion>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"font-weight-bold\">\n                        <Row>\n                            <Col>Dynamic Voting Title</Col>\n                            <Col className=\"text-right\">{this.props.votingStatus === \"results\"? 'Result: Dynamic record result': null}</Col>\n                        </Row>\n                        {/* {this.props.votingStatus === \"results\"? } */}\n\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"0\">\n                            <Card.Body>\n                                <Row className=\"mx-0\">\n                                    <Col lg={this.props.votingStatus === \"results\"? 5 : 8} className=\"px-0 d-flex flex-column justify-content-between\">                    \n                                        <Row className=\"mx-0\">\n                                                <h6 className=\"mr-1\">Details:</h6> <span>*Dynamic Voting Details*</span>\n                                        </Row>\n                                        <Row className=\"mx-0\">\n                                            <Col className=\"px-0 d-flex align-items-center\">\n                                                <h6 className=\"mr-1\">{this.props.votingStatus === \"active\"? 'End Date': 'Ended'}:</h6> <span>*Date &amp; Hour*</span>\n                                            </Col>\n                                            {this.props.votingStatus === \"results\"? null:\n                                                this.props.user === \"admin\"?\n                                                <Col className=\"px-0\">\n                                                    <DatePicker placeholderText=\"Update End Date\" withPortal showTimeSelect\n                                                    timeFormat=\"HH:mm\"\n                                                    timeIntervals={30}\n                                                    timeCaption=\"time\"\n                                                    dateFormat=\"MMMM d, hh:mm\"/>\n                                                </Col>\n                                                :\n                                                <Col className=\"px-0\">\n                                                    <Form.Group as={Row} controlId=\"formPrioritySelect\">\n                                                        <Form.Label column sm={4}>\n                                                            Your vote:\n                                                        </Form.Label>\n                                                        <Col sm={4}>\n                                                            <Form.Control required as=\"select\" className=\"priority-select\">\n                                                                <option value=\"In Favor\">In Favor</option>\n                                                                <option value=\"Against\">Against</option>\n                                                            </Form.Control>\n                                                        </Col>\n                                                        <Col sm={4}>\n                                                            <Button type=\"submit\">Submit Vote</Button>\n                                                        </Col>\n                                                    </Form.Group>\n                                                </Col>\n                                            }\n                                        </Row>\n                                    </Col>\n                                    <Col lg={this.props.votingStatus === \"results\"? 7 : 4}>\n                                        <Row>\n\n                                        {this.props.votingStatus === \"results\"? \n                                            <Col>\n                                                <h6 className=\"text-center mb-3\">Results</h6>\n                                                <PieChart className=\"chart\"\n                                                    data={[\n                                                        { title: 'For', value: 80, color: '#90ee90' },\n                                                        { title: 'Against', value: 20, color: '#a2012c' },\n                                                    ]}\n                                                    />\n                                            </Col>\n                                            :null}\n                                            <Col>\n                                                <h6 className=\"text-center mb-3\">Voting Precentage</h6>\n                                                <PieChart className=\"chart\"\n                                                    data={[\n                                                        { title: 'For', value: 10, color: '#90ee90' },\n                                                        { title: 'Against', value: 15, color: '#a2012c' },\n                                                    ]}\n                                                    />\n                                            </Col>    \n                                        </Row>                                           \n                                    </Col>\n                                </Row>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                </Accordion>\n        );\n\n        return (\n           <div className=\"VotingsAccordion\">\n               {votingAccordion}\n           </div>\n        );\n    }\n}\n\nexport default VotingsAccordion;","import React from 'react'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport 'react-datepicker/dist/react-datepicker.css'\n\n\nclass PendingVotingsAccordion extends React.Component {\n    \n    render() {\n        const votingAccordion = (\n            <Accordion>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"font-weight-bold\">\n                        <Row>\n                            <Col>Dynamic Voting Title</Col>\n                            <Col className=\"text-right\">{this.props.votingStatus === \"results\"? 'Result: Dynamic record result': null}</Col>\n                        </Row>\n                        {/* {this.props.votingStatus === \"results\"? } */}\n\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"0\">\n                            <Card.Body>\n                                <Row className=\"mx-0\">\n                                    <Col lg={this.props.votingStatus === \"results\"? 5 : 8} className=\"px-0 d-flex flex-column justify-content-between\">                    \n                                        <Row className=\"mx-0\">\n                                                <Col className=\"px-0\">\n                                                    <Form.Group as={Row} controlId=\"formPrioritySelect\">\n                                                        <Form.Label column sm={4}>\n                                                            Your vote:\n                                                        </Form.Label>\n                                                        <Col sm={4}>\n                                                            <Form.Control required as=\"select\" className=\"priority-select\">\n                                                                <option value=\"In Favor\">In Favor</option>\n                                                                <option value=\"Against\">Against</option>\n                                                            </Form.Control>\n                                                        </Col>\n                                                        <Col sm={4}>\n                                                            <Button type=\"submit\">Submit Vote</Button>\n                                                        </Col>\n                                                    </Form.Group>\n                                                </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                </Accordion>\n        );\n\n        return (\n           <div className=\"PendingVotingsAccordion\">\n               {votingAccordion}\n           </div>\n        );\n    }\n}\n\nexport default PendingVotingsAccordion;","import React from 'react'\nimport PaginationNav from '../components/PaginationNav';\nimport IssuesAccordion from '../components/DashboardIssuesAccordion';\nimport DashboardIssuesAccordion from '../components/DashboardIssuesAccordion';\nimport TenantsAccordion from '../components/TenantsAccordion';\nimport MessagesAccordion from '../components/MessagesAccordion';\nimport DashboardNewMessagesAccordion from '../components/DashboardNewMessagesAccordion';\nimport VotingsAccordion from '../components/VotingsAccordion';\nimport PendingVotingsAccordion from '../components/PendingVotingsAccordion';\n\n\nclass Records extends React.Component {\n    \n    render () {\n        const accordion = (\n                    <div>\n                        {\n                            (() => {\n                            switch(this.props.recordType) {\n                                case 'issues':\n                                return <IssuesAccordion />;\n                                case 'new issues':\n                                return <DashboardIssuesAccordion />;\n                                case 'overdue issues':\n                                return <DashboardIssuesAccordion />;\n                                case 'new resolved issues':\n                                return <DashboardIssuesAccordion />;\n                                case 'tenants':\n                                return <TenantsAccordion />;\n                                case 'messasges':\n                                return <MessagesAccordion />;\n                                case 'new messages':\n                                return <DashboardNewMessagesAccordion />;\n                                case 'active votings':\n                                return <VotingsAccordion votingStatus=\"active\"/>;\n                                case 'pending votings':\n                                return <PendingVotingsAccordion />;\n                                case 'voting results':\n                                return <VotingsAccordion votingStatus=\"results\"/>;\n                                default:\n                                return null;\n                            }\n                            })()\n                        }\n                  </div>\n            \n        );\n\n        return (\n            //Add a switch for different record types / module name this.props.recordType == \"new issues\" etc \n            <div className=\"Records\">\n                {accordion}\n            </div>\n        );     \n    }\n}\n\nclass NoRecords extends React.Component {\n   \n    render() {\n\n        return (\n            <p className=\"noRecordsMsg\">There are no {this.props.recordType}. :)</p>\n        );\n    }\n}\nclass RecordsDisplay extends React.Component {\n  \n    render() {\n        \n        return (\n            this.props.hasRecords? \n                <div className=\"recordsDisplay\">\n                    <Records recordType={this.props.recordType}/>\n                    <PaginationNav /> \n                    {/* which class should manage the activePage and totalItemsCount? */}\n                    {/* <PaginationNav activePage={this.state.activePage} totalItemsCount={this.state.totalItemsCount}/> */}\n                </div>\n            : <NoRecords recordType={this.props.recordType}/>\n        );\n    }\n}\n\nexport default RecordsDisplay;","import React from 'react'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport PaginationNav from './PaginationNav';\nimport PieChart from 'react-minimal-pie-chart'\n\nclass Records extends React.Component {\n    \n    render () {\n        return (\n            <Row className=\"text-center py-3\">\n                {/* Make reusable comp*/}\n                <Col lg={4} className=\"chartBox\">\n                    <h6>Voting Title1</h6> \n                    <p className=\"mb-1 font-weight-normal\">By: Date</p>\n                    <PieChart className=\"chart\"\n                        data={[\n                            { title: 'For', value: 80, color: '#90ee90' },\n                            { title: 'Against', value: 20, color: '#a2012c' },\n                    ]}/>\n                </Col>\n                <Col lg={4} className=\"chartBox\">\n                    <h6>Voting Title1</h6> \n                    <p className=\"mb-1 font-weight-normal\">By: Date</p>\n                        <PieChart className=\"chart\"\n                            data={[\n                                { title: 'For', value: 80, color: '#90ee90' },\n                                { title: 'Against', value: 20, color: '#a2012c' },\n                            ]}\n                            />\n                </Col>\n                <Col lg={4} className=\"chartBox\">\n                    <h6>Voting Title1</h6> \n                    <p className=\"mb-1 font-weight-normal\">By: Date</p>\n                        <PieChart className=\"chart\"\n                            data={[\n                                { title: 'In Favor', value: 80, color: '#90ee90' },\n                                { title: 'Against', value: 20, color: '#a2012c' },\n                            ]}\n                            />\n                </Col>\n            </Row>\n        );     \n    }\n}\n\nclass NoRecords extends React.Component {\n   \n    render() {\n\n        return (\n            <p className=\"noRecordsMsg\">There are no {this.props.recordType}. :)</p>\n        );\n    }\n}\nclass ChartsDisplay extends React.Component {\n  \n    render() {\n        \n        return (\n            this.props.hasRecords? \n                <div className=\"chartsDisplay\">\n                    <Records/>\n                    <PaginationNav /> \n                    {/* which class should manage the activePage and totalItemsCount? */}\n                    {/* <PaginationNav activePage={this.state.activePage} totalItemsCount={this.state.totalItemsCount}/> */}\n                </div>\n            : <NoRecords recordType={this.props.recordType}/>\n        );\n    }\n}\n\nexport default ChartsDisplay;","import React from 'react';\n//import Nav from 'react-bootstrap/Nav'\n//import Navbar from 'react-bootstrap/Navbar'\n//import Jumbotron from 'react-bootstrap/Jumbotron'\n//import Button from 'react-bootstrap/Button'\n//import DashboardIssuesAccordion from '../components/RecordsDisplay'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport RecordsDisplay from '../components/RecordsDisplay';\nimport ChartsDisplay from '../components/ChartsDisplay';\nimport Navigation from '../components/Navigation';\nimport Badge from 'react-bootstrap/Badge';\nimport PieChart from 'react-minimal-pie-chart'\n\n\nclass CommitteeDashboard extends React.Component {\n  \n    render() {\n     \n      return (\n                <div className=\"Dashboard h-100\">\n                    <Navigation isLoggedIn={this.props.isLoggedIn} pageName=\"CommitteeDashboard\"/>\n\n                    <Container fluid className=\"px-4\"> \n                            <Row className=\"pb-2\">\n                                <Col lg={6} className=\"issue-box\">\n                                    <h2>New Reported Issues <Badge variant=\"light\">0</Badge></h2> \n                                    {/* Who manages the hasRecords state? */}\n                                    <RecordsDisplay hasRecords={true} recordType=\"new issues\" /> \n                                </Col>\n                                <Col lg={6}>\n                                    <h2>Overdue Issues <Badge variant=\"light\">9</Badge></h2>\n                                     {/* Who manages the hasRecords state? */}\n                                    <RecordsDisplay hasRecords={true} recordType=\"overdue issues\" />\n                                </Col>\n                            </Row>\n                           \n                            <Row className=\"pt-3 border-top\">\n                                <Col>                    \n                                    <h2>Active Voting Percentage</h2>\n                                    {/* Who manages the hasRecords state? */}\n                                    <ChartsDisplay hasRecords={true} recordType=\"active votings\" />\n                             </Col>\n                            </Row>\n                        </Container>\n                    {/* <Modal show=\"true\" size=\"lg\">\n                        <Modal.Header closeButton>\n                            <Modal.Title>New Issue</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <Form className=\"issueModalFrm\">\n                                <Form.Group as={Row} controlId=\"formNameTxt\">\n                                    <Form.Label column sm={2}>\n                                        Title:\n                                    </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Control required type=\"text\" />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formDetailsTxt\">\n                                    <Form.Label column sm={2}>\n                                        Details:\n                                    </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Control required as=\"textarea\" rows=\"3\" />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formPrioritySelect\">\n                                    <Form.Label column sm={2}>\n                                        Priority:\n                                    </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Control required as=\"select\" className=\"priority-select\">\n                                            <option value=\"urgent\">Urgent</option>\n                                            <option value=\"important\">Important</option>\n                                            <option value=\"normal\">Normal</option>\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formImgControl\" className=\"align-items-center\">\n                                    <Form.Label column sm={2}>\n                                        Image URL:\n                                    </Form.Label>\n                                    <Col sm={7}>\n                                        <div className=\"custom-file\">\n                                            <input type=\"file\" className=\"custom-file-input\" id=\"customFile\" />\n                                            <label className=\"custom-file-label\" for=\"customFile\">Choose image</label>\n                                        </div>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Image src=\"https://interactive-examples.mdn.mozilla.net/media/examples/grapefruit-slice-332-332.jpg\" fluid/>\n                                    </Col>\n                                </Form.Group>\n                            </Form>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\">\n                                Close\n                            </Button>\n                            <Button variant=\"primary\">\n                                Create\n                            </Button>\n                        </Modal.Footer>\n                    </Modal> */}\n            </div>\n        );\n\n    }\n  }   \n\n\nexport default CommitteeDashboard;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\nimport UserDB from '../components/UserDB';\nimport CommitteeDashboard from './CommitteeDashboard';\n//import TenantDashboard from './TenantDashboard';\n\n\nclass SignUp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          username: \"\",\n          email:\"\",\n          password: \"\",\n          community:\"\",\n          address:\"\",\n          validated:false,\n          signUpError:false,\n          errorMsg:\"\",\n          signUpSuccess:false\n        };\n\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handleEmailChange = this.handleEmailChange.bind(this);\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\n        this.handleCommunityChange = this.handleCommunityChange.bind(this);\n        this.handleAddressChange = this.handleAddressChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.SignUp = this.SignUp.bind(this);\n        this.OnSignUpSuccess = this.OnSignUpSuccess.bind(this);\n        this.OnSignUpError = this.OnSignUpError.bind(this);\n    }\n\n    handleNameChange (e) {\n        let value = e.target.value;\n        this.state.username = value;\n        this.setState(this.state);\n    }\n\n    handleEmailChange (e) {\n        let value = e.target.value;\n        this.state.email = value;\n        this.setState(this.state);\n    }\n\n    handlePasswordChange (e) {\n        let value = e.target.value;\n        this.state.password = value;\n        this.setState(this.state);\n    }\n\n    handleCommunityChange (e) {\n        let value = e.target.value;\n        this.state.community = value;\n        this.setState(this.state);\n    }\n\n    handleAddressChange (e) {\n        let value = e.target.value;\n        this.state.address = value;\n        this.setState(this.state);\n    }\n    \n    OnSignUpSuccess(user) {\n        this.state.signUpError = false;\n        this.state.signUpSuccess = true;\n        this.setState(this.state);\n\n    }\n\n    OnSignUpError(error) {\n        this.state.errorMsg = error.message;\n        this.state.signUpError = true;\n        this.setState(this.state);\n    }\n\n    SignUp() {\n        const user = UserDB.GetUser()\n        user.set('username', this.state.username);\n        user.set('email', this.state.email);\n        user.set('password', this.state.password);\n        user.set('communityName', this.state.community);\n        user.set('address', this.state.address);\n\n        //UserDB.CreateTenant(user, this.OnSignUpSuccess, this.OnSignUpError)\n        // UserDB.GetAllUsers(this.OnGetAllUsersSuccess, this.OnGetAllUsersError)\n        //\n        // UserDB.FindUserByEmail(\"ooo@gmail.com\", this.OnFindUserSuccess, this.OnFindUserError)\n        //\n         UserDB.SignUpCommitteeMember(user, this.OnSignUpSuccess, this.OnSignUpError);\n         //UserDB.LogOut(this.OnSignUpSuccess, this.OnSignUpError)\n      }\n\n    handleSubmit(e) {\n        const form = e.target;\n        this.state.validated = true;\n        this.setState(this.state);\n        e.preventDefault();\n        e.stopPropagation();\n        if (form.checkValidity() === true) {\n            this.SignUp();\n        }\n      }\n\n    render() {\n        debugger;\n\n        const destination = (\n            <div>\n            {\n                this.state.signUpSuccess ?  <CommitteeDashboard /> :\n                                            <div className=\"SignUp\">\n                                                <h1>Create a Homeboy Account</h1>\n                                                <p>or <a href=\"#/login\">or log in to your account</a></p>\n                                                <Alert variant=\"danger\" show={this.state.signUpError}>\n                                                {this.state.errorMsg}\n                                                </Alert>\n                                                <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\n                                                    <Form.Group controlId=\"formBasicName\">\n                                                        <Form.Label>Name</Form.Label>\n                                                        <Form.Control type=\"text\" placeholder=\"Enter name\" onChange={this.handleNameChange} required/>\n                                                        <Form.Control.Feedback type=\"invalid\">\n                                                            Please provide a valid name.\n                                                        </Form.Control.Feedback>\n                                                    </Form.Group>\n                                        \n                                                    <Form.Group controlId=\"formBasicEmail\">\n                                                        <Form.Label>Email address</Form.Label>\n                                                        <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={this.handleEmailChange} required/>\n                                                        <Form.Control.Feedback type=\"invalid\">\n                                                            Please provide a valid email.\n                                                        </Form.Control.Feedback>\n                                                        <Form.Text className=\"text-muted\">\n                                                            We'll never share your email with anyone else.\n                                                        </Form.Text>\n                                                    </Form.Group>\n                                        \n                                                    <Form.Group controlId=\"formBasicPassword\">\n                                                        <Form.Label>Password</Form.Label>\n                                                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={this.handlePasswordChange} required/>\n                                                        <Form.Control.Feedback type=\"invalid\">\n                                                            Please provide a valid password.\n                                                        </Form.Control.Feedback>\n                                                    </Form.Group>\n                                        \n                                                    <Form.Group controlId=\"formBasicCommunity\">\n                                                        <Form.Label>Building Community Name</Form.Label>\n                                                        <Form.Control type=\"text\" placeholder=\"Enter community name\" onChange={this.handleCommunityChange} required/>\n                                                        <Form.Control.Feedback type=\"invalid\">\n                                                            Please choose a name for your building.\n                                                        </Form.Control.Feedback>\n                                                        \n                                                    </Form.Group>\n                                        \n                                                    <Form.Group controlId=\"formBasicAddress\">\n                                                        <Form.Label>Full Address</Form.Label>\n                                                        <Form.Control type=\"text\" placeholder=\"Enter address\" onChange={this.handleAddressChange} required/>\n                                                        <Form.Control.Feedback type=\"invalid\">\n                                                        Address is a required field.\n                                                        </Form.Control.Feedback>\n                                                    </Form.Group>\n                                                    \n                                                    <Button type=\"submit\" variant=\"success\"  block>\n                                                        Create New Account\n                                                    </Button>\n                                                </Form>\n                                            </div>    \n                }\n            </div>\n        );\n        \n        return (\n            <div>{destination}</div>\n        );\n    }\n}\n\nexport default SignUp;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\n\nfunction Login() {\n  return (\n    <div className=\"Login\">\n      <h1>Login to Homeboy</h1>\n      <p>or <a href=\"#/signup\">or create an account</a></p>\n      {/* <Alert variant=\"danger\" show={props.state.invalidLogin}>\n          Invalid email or password!\n      </Alert> */}\n     <Form>        \n        <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"Enter email\"/>\n            <Form.Text className=\"text-muted\">\n                We'll never share your email with anyone else.\n            </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control type=\"password\" placeholder=\"Password\"/>\n        </Form.Group>\n\n       \n        <Button variant=\"success\" type=\"button\" block>\n            Come On In!\n        </Button>\n    </Form>\n</div>\n  );\n}\n\nexport default Login;\n","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\n\nclass MessagesNavbar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { }\n    }\n    render() {\n        //const { recipe } = this.props;\n        return (\n            <Container className=\"NavBar\">\n                {/* <Row className=\"border justify-content-center rounded\">\n                    <Col className=\"col-auto px-0 d-flex align-items-center\">\n                        <i className=\"fas fa-search\"></i>\n                    </Col>\n                    <Col className=\"col-11 px-0\">\n                        <Form.Control className=\"border-0\" type=\"text\" placeholder=\"Filter by text in title and details\" onChange={this.handleChange} />\n                    </Col>\n                </Row> */}\n                <Row>\n                    <Col lg={6}>\n                        <Row className=\"border rounded justify-content-center\">\n                            <div className=\"col-auto px-0 d-flex align-items-center\">\n                                <i className=\"fas fa-search\"></i>\n                            </div>\n                            <div className=\"col-11 px-0\">\n                                <Form.Control className=\"border-0\" type=\"text\" placeholder=\"Filter title or details\" onChange={this.handleChange} />\n                            </div>\n                        </Row>\n                    </Col>\n                    <Col lg={3} className=\"pr-0 select-wrapper\">\n                        {/* <DropdownButton data-toggle=\"dropdown\" id=\"dropdown-basic-button\" variant=\"secondary\" title=\"Filter by priority \">\n                            <Dropdown.Item as=\"button\">Info</Dropdown.Item>\n                            <Dropdown.Item as=\"button\">Important</Dropdown.Item>\n                        </DropdownButton> */}\n\n                         <select className=\"browser-default custom-select\">\n                            <option>Filter by priority</option>\n                            <option value=\"1\">Info</option>\n                            <option value=\"2\">Important</option>                            \n                        </select>\n                    </Col>\n                    <Col lg={3} className=\"px-0 text-right\">\n                        <h6 className=\"d-inline-block align-middle mr-3\">Sort by:</h6>\n                        <div className=\"form-check form-check-inline\">\n                            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" value=\"option1\" checked/>\n                            <label className=\"form-check-label\" for=\"inlineRadio1\">Date</label>\n                            </div>\n                            <div className=\"form-check form-check-inline mr-0\">\n                            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" value=\"option2\" />\n                            <label className=\"form-check-label\" for=\"inlineRadio2\">Priority</label>\n                        </div>\n                        \n                        {/* <Form.Check inline label=\"Date\" type=\"radio\" id=\"inline-radio-1\" />\n                        <Form.Check inline label=\"Priority\" type=\"radio\" id=\"inline-radio-2\" /> */}\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\n\n\n\nexport default MessagesNavbar;","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\n// import Col from 'react-bootstrap/Col'\n// import DropdownButton from 'react-bootstrap/DropdownButton'\n// import Dropdown from 'react-bootstrap/Dropdown'\n\n\n\nclass TenantsNavbar extends React.Component {\n  \n    render() {\n        //const { recipe } = this.props;\n        return (\n            <Container className=\"NavBar\">\n                {/* <Row className=\"border justify-content-center rounded\">\n                    <Col className=\"col-auto px-0 d-flex align-items-center\">\n                        <i className=\"fas fa-search\"></i>\n                    </Col>\n                    <Col className=\"col-11 px-0\">\n                        <Form.Control className=\"border-0\" type=\"text\" placeholder=\"Filter by text in title and details\" onChange={this.handleChange} />\n                    </Col>\n                </Row> */}\n                        <Row className=\"border rounded justify-content-center\">\n                            <div className=\"col-auto px-0 d-flex align-items-center\">\n                                <i className=\"fas fa-search\"></i>\n                            </div>\n                            <div className=\"col-11 px-0\">\n                                <Form.Control className=\"border-0\" type=\"text\" placeholder=\"Filter by name, email or apartment\" onChange={this.handleChange} />\n                            </div>\n                        </Row>                    \n            </Container>\n        );\n    }\n}\n\n\n\n\nexport default TenantsNavbar;","import React from 'react';\n//import Nav from 'react-bootstrap/Nav'\n//import Navbar from 'react-bootstrap/Navbar'\n//import Jumbotron from 'react-bootstrap/Jumbotron'\n//import Button from 'react-bootstrap/Button'\nimport MessagesNavbar from '../components/MessagesNavbar'\nimport RecordsDisplay from '../components/RecordsDisplay'\nimport Navigation from '../components/Navigation'\nimport { Container, Row, Col, Button, Modal, Form, Image } from 'react-bootstrap'\nimport PaginationNav from '../components/PaginationNav';\n\n\n//import Modal from 'react-bootstrap/Modal'\n//import Form from 'react-bootstrap/Form'\n//import Row from 'react-bootstrap/Row'\n//import Col from 'react-bootstrap/Col'\n\n\n\nclass Messages extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        activePage: 1,\n        totalItemsCount: 100 // This will come from the relevant page: messages\\votings etc, where the total number of records will be stored in the page's state.\n      };\n      this.handlePageChange = this.handlePageChange.bind(this);\n    }\n    \n    handlePageChange(e) {\n      let val = parseInt(e.target.innerHTML);\n      let pageNumber = this.state.activePage;\n  \n      if (isNaN(val)) {\n        console.log('Not a number ' + val);\n        val = e.target.innerText;\n        if (val.includes(\"‹\")) {\n          console.log(\"Previous\");\n          pageNumber--;\n        }\n        else if (val.includes(\"›\")) {\n          console.log(\"Next\");\n          pageNumber++;\n        }\n        \n      }\n      else {\n        console.log('number ' + val);\n        pageNumber =  val;\n      }\n      console.log('active page is ' + pageNumber);\n      //this.state.activePage = pageNumber;\n      console.log(this.state.activePage);\n      //this.setState(this.state);\n      this.setState({activePage:pageNumber});\n      console.log(this.state.activePage);\n    }\n  \n    render() {\n      \n      return (\n                <div className=\"Messages h-100\">\n                    <Navigation isLoggedIn={this.props.isLoggedIn} pageName=\"Messages\"/>\n\n                    <Container className=\"py-6 px-5\">\n                        <MessagesNavbar />\n                        <div className=\"text-right pt-4 pb-1\">\n                            <a href=\"#\" style={{textDecoration:\"underline\", fontWeight:\"bolder\"}}>New Message</a>\n                        </div>\n                        <RecordsDisplay hasRecords={true} recordType=\"messasges\" /> \n\n                    </Container>\n                    {/* <Modal show=\"true\" size=\"lg\">\n                        <Modal.Header closeButton>\n                            <Modal.Title>New Message</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <Form className=\"messageModalFrm\">\n                                <Form.Group as={Row} controlId=\"formNameTxt\">\n                                    <Form.Label column sm={2}>\n                                        Title:\n                                    </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Control type=\"text\" placeholder=\"Message title\" />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formDetailsTxt\">\n                                    <Form.Label column sm={2}>\n                                        Details:\n                                    </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Control as=\"textarea\" rows=\"3\" />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formPrioritySelect\">\n                                    <Form.Label column sm={2}>\n                                        Priority:\n                                    </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Control as=\"select\" className=\"priority-select\">\n                                            <option value=\"info\">Information</option>\n                                            <option value=\"important\">Important</option>\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formImgControl\" className=\"align-items-center\">\n                                    <Form.Label column sm={2}>\n                                        Image URL:\n                                    </Form.Label>\n                                    <Col sm={7}>\n                                        <div className=\"custom-file\">\n                                            <input type=\"file\" className=\"custom-file-input\" id=\"customFile\" />\n                                            <label className=\"custom-file-label\" for=\"customFile\">Choose image</label>\n                                        </div>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Image src=\"https://interactive-examples.mdn.mozilla.net/media/examples/grapefruit-slice-332-332.jpg\" fluid/>\n                                    </Col>\n                                </Form.Group>\n                            </Form>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\">\n                                Close\n                            </Button>\n                            <Button variant=\"primary\">\n                                Create\n                            </Button>\n                        </Modal.Footer>\n                    </Modal> */}\n            </div>\n        );\n\n    }\n  }   \n\n\nexport default Messages;\n","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\n\n\n\nclass VotingsNavbar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { }\n    }\n    render() {\n        //const { recipe } = this.props;\n        return (\n            <Container fluid className=\"NavBar mt-3 mb-2\">\n                {/* <Row className=\"border justify-content-center rounded\">\n                    <Col className=\"col-auto px-0 d-flex align-items-center\">\n                        <i className=\"fas fa-search\"></i>\n                    </Col>\n                    <Col className=\"col-11 px-0\">\n                        <Form.Control className=\"border-0\" type=\"text\" placeholder=\"Filter by text in title and details\" onChange={this.handleChange} />\n                    </Col>\n                </Row> */}\n                        <Row className=\"border rounded justify-content-center\">\n                            <div className=\"col-auto px-0 d-flex align-items-center\">\n                                <i className=\"fas fa-search\"></i>\n                            </div>\n                            <div className=\"col-11 px-0\">\n                                <Form.Control className=\"border-0\" type=\"text\" placeholder=\"Filter by text in title and details\" onChange={this.handleChange} />\n                            </div>\n                        </Row>                    \n            </Container>\n        );\n    }\n}\n\n\n\n\nexport default VotingsNavbar;","import React from 'react';\n//import Nav from 'react-bootstrap/Nav'\n//import Navbar from 'react-bootstrap/Navbar'\n//import Jumbotron from 'react-bootstrap/Jumbotron'\n//import Button from 'react-bootstrap/Button'\nimport TenantsNavbar from '../components/TenantsNavbar'\nimport Navigation from '../components/Navigation'\nimport RecordsDisplay from '../components/RecordsDisplay'\nimport Container from 'react-bootstrap/Container'\n//import { Container, Row, Col, Button, Modal, Form, Image } from 'react-bootstrap'\nimport PaginationNav from '../components/PaginationNav';\n\n\n//import Modal from 'react-bootstrap/Modal'\n//import Form from 'react-bootstrap/Form'\n//import Row from 'react-bootstrap/Row'\n//import Col from 'react-bootstrap/Col'\n\nclass Tenants extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        activePage: 1,\n        totalItemsCount: 100 // This will come from the relevant page: messages\\votings etc, where the total number of records will be stored in the page's state.\n      }; //what happens when it's 50 records divided by 10 per page?\n      this.handlePageChange = this.handlePageChange.bind(this);\n    }\n    \n    handlePageChange(e) {\n      let val = parseInt(e.target.innerHTML);\n      let pageNumber = this.state.activePage;\n  \n      if (isNaN(val)) {\n        console.log('Not a number ' + val);\n        val = e.target.innerText;\n        if (val.includes(\"‹\")) {\n          console.log(\"Previous\");\n          pageNumber--;\n        }\n        else if (val.includes(\"›\")) {\n          console.log(\"Next\");\n          pageNumber++;\n        }\n        \n      }\n      else {\n        console.log('number ' + val);\n        pageNumber =  val;\n      }\n      console.log('active page is ' + pageNumber);\n      //this.state.activePage = pageNumber;\n      console.log(this.state.activePage);\n      //this.setState(this.state);\n      this.setState({activePage:pageNumber});\n      console.log(this.state.activePage);\n    }\n  \n    render() {\n\n        \n      \n      return (\n        <div className=\"Tenants h-100\">\n           <Navigation isLoggedIn={this.props.isLoggedIn} pageName=\"Tenants\"/>\n\n            {/* {votingAccordion}   */}\n            \n            <Container className=\"py-6 px-5\">\n                <TenantsNavbar />\n                <div className=\"text-right pt-4 pb-1\">\n                    <a href=\"#\" style={{textDecoration:\"underline\", fontWeight:\"bolder\"}}>New Tenant</a>\n                </div>\n                <RecordsDisplay hasRecords={true} recordType=\"tenants\" /> \n            </Container>\n\n            {/* All tenants will have a default password of 1-6 */}\n            \n            {/* <Modal show=\"true\" size=\"lg\">\n                <Modal.Header closeButton>\n                    <Modal.Title>New Tenant</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form className=\"tenantModalFrm\">\n                        <Form.Group as={Row} controlId=\"formNameTxt\">\n                            <Form.Label column sm={2}>\n                                Name:\n                            </Form.Label>\n                            <Col sm={10}>\n                                <Form.Control type=\"text\" placeholder=\"Enter tenant's name\" />\n                            </Col>\n                        </Form.Group>\n\n                        <Form.Group as={Row} controlId=\"formEmailTxt\">\n                            <Form.Label column sm={2}>\n                                Email:\n                            </Form.Label>\n                            <Col sm={10}>\n                                <Form.Control type=\"email\" placeholder=\"Enter tenant's email\" />\n                            </Col>\n                        </Form.Group>\n\n                        <Form.Group as={Row} controlId=\"formAptTxt\">\n                            <Form.Label column sm={2}>\n                                Appartment:\n                            </Form.Label>\n                            <Col sm={10}>\n                                <Form.Control type=\"text\" placeholder=\"Enter tenant's appartment\" />\n                            </Col>\n                        </Form.Group>\n\n\n                        <Form.Group as={Row} controlId=\"formImgControl\" className=\"align-items-center\">\n                            <Form.Label column sm={2}>\n                                Image URL:\n                            </Form.Label>\n                            <Col sm={7}>\n                                <div className=\"custom-file\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"customFile\" />\n                                    <label className=\"custom-file-label\" for=\"customFile\">Choose image</label>\n                                </div>\n                            </Col>\n                            <Col sm={3}>\n                                <Image src=\"https://interactive-examples.mdn.mozilla.net/media/examples/grapefruit-slice-332-332.jpg\" fluid/>\n                            </Col>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\">\n                        Close\n                    </Button>\n                    <Button variant=\"primary\">\n                        Create\n                    </Button>\n                </Modal.Footer>\n            </Modal> */}\n        </div>\n        );\n\n    }\n  }   \n\nexport default Tenants;\n","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\n\nclass IssuesNavbar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { }\n    }\n    render() {\n        //const { recipe } = this.props;\n        return (\n            <Container className=\"NavBar\">\n                {/* <Row className=\"border justify-content-center rounded\">\n                    <Col className=\"col-auto px-0 d-flex align-items-center\">\n                        <i className=\"fas fa-search\"></i>\n                    </Col>\n                    <Col className=\"col-11 px-0\">\n                        <Form.Control className=\"border-0\" type=\"text\" placeholder=\"Filter by text in title and details\" onChange={this.handleChange} />\n                    </Col>\n                </Row> */}\n                <Row>\n                    <Col lg={6}>\n                        <Row className=\"border rounded justify-content-center\">\n                            <div className=\"col-auto px-0 d-flex align-items-center\">\n                                <i className=\"fas fa-search\"></i>\n                            </div>\n                            <div className=\"col-11 px-0\">\n                                <Form.Control className=\"border-0\" type=\"text\" placeholder=\"Filter title or details\" onChange={this.handleChange} />\n                            </div>\n                        </Row>\n                    </Col>\n                    <Col lg={3} className=\"pr-0 select-wrapper\">\n                        {/* <DropdownButton data-toggle=\"dropdown\" id=\"dropdown-basic-button\" variant=\"secondary\" title=\"Filter by priority \">\n                            <Dropdown.Item as=\"button\">Info</Dropdown.Item>\n                            <Dropdown.Item as=\"button\">Important</Dropdown.Item>\n                        </DropdownButton> */}\n\n                         <select className=\"browser-default custom-select\">\n                            <option>Filter by priority</option>\n                            <option value=\"1\">Info</option>\n                            <option value=\"2\">Important</option>                            \n                        </select>\n                    </Col>\n                    <Col lg={3} className=\"px-0 text-right\">\n                        <h6 className=\"d-inline-block align-middle mr-3\">Sort by:</h6>\n                        <div className=\"form-check form-check-inline\">\n                            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" value=\"option1\" checked/>\n                            <label className=\"form-check-label\" for=\"inlineRadio1\">Date</label>\n                            </div>\n                            <div className=\"form-check form-check-inline mr-0\">\n                            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" value=\"option2\" />\n                            <label className=\"form-check-label\" for=\"inlineRadio2\">Priority</label>\n                        </div>\n                        \n                        {/* <Form.Check inline label=\"Date\" type=\"radio\" id=\"inline-radio-1\" />\n                        <Form.Check inline label=\"Priority\" type=\"radio\" id=\"inline-radio-2\" /> */}\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\n\n\n\nexport default IssuesNavbar;","import React from 'react';\n//import Nav from 'react-bootstrap/Nav'\n//import Navbar from 'react-bootstrap/Navbar'\n//import Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport VotingsNavbar from '../components/VotingsNav'\nimport RecordsDisplay from '../components/RecordsDisplay'\nimport { Container, Row, Col} from 'react-bootstrap'\nimport Navigation from '../components/Navigation';\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport FormControl from 'react-bootstrap/FormControl'\n\nclass Votings extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        activePage: 1,\n        totalItemsCount: 14 // This will come from the relevant page: Votings\\votings etc, where the total number of records will be stored in the page's state.\n      };\n      this.handlePageChange = this.handlePageChange.bind(this);\n    }\n    \n    handlePageChange(e) {\n      let val = parseInt(e.target.innerHTML);\n      let pageNumber = this.state.activePage;\n  \n      if (isNaN(val)) {\n        console.log('Not a number ' + val);\n        val = e.target.innerText;\n        if (val.includes(\"‹\")) {\n          console.log(\"Previous\");\n          pageNumber--;\n        }\n        else if (val.includes(\"›\")) {\n          console.log(\"Next\");\n          pageNumber++;\n        }\n        \n      }\n      else {\n        console.log('number ' + val);\n        pageNumber =  val;\n      }\n      console.log('active page is ' + pageNumber);\n      //this.state.activePage = pageNumber;\n      console.log(this.state.activePage);\n      //this.setState(this.state);\n      this.setState({activePage:pageNumber});\n      console.log(this.state.activePage);\n    }\n  \n    render() {\n      \n            return (\n                    <div className=\"Votings h-100\">\n                        <Navigation isLoggedIn={this.props.isLoggedIn} pageName=\"Votings\"/>\n\n                        <Container fluid className=\"p-4 h-100\">\n                            <Row className=\"h-100\">\n                                <Col className=\"border-2\">\n                                        <h2>Active Votings</h2>\n                                        <div className=\"text-right pt-4 pb-2\">\n                                            <a href=\"#\" style={{textDecoration:\"underline\", fontWeight:\"bolder\"}}>New Voting</a>\n                                        </div>\n                                    <RecordsDisplay hasRecords={true} recordType=\"active votings\" /> \n                                </Col>\n                                <Col>\n                                    <h2>Voting Results</h2>\n                                    <VotingsNavbar />\n                                    <RecordsDisplay hasRecords={true} recordType=\"voting results\" /> \n                                </Col>\n                            </Row>\n                        </Container>\n                        {/* <Modal show size=\"lg\">\n                        <Modal.Header closeButton>\n                            <Modal.Title>New Voting</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <Form className=\"VotingModalFrm\">\n                                <Form.Group as={Row} controlId=\"formNameTxt\">\n                                    <Form.Label column lg={2}>\n                                        Title:\n                                    </Form.Label>\n                                    <Col lg={10}>\n                                        <Form.Control required type=\"text\" placeholder=\"Voting title\" />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formDetailsTxt\">\n                                    <Form.Label column lg={2}>\n                                        Details:\n                                    </Form.Label>\n                                    <Col lg={10}>\n                                        <Form.Control required type=\"text\" placeholder=\"Voting Details\" />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formPrioritySelect\">\n                                    <Form.Label column lg={2}>\n                                        Options:\n                                    </Form.Label>\n                                    <Col lg={10}>\n                                        <Form.Control required type=\"text\" className=\"mb-2\"/>\n                                        <Form.Control required type=\"text\" />\n                                        <Button variant=\"link\" className=\"pl-0\">+ Add option</Button>\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formImgControl\" className=\"align-items-center\">\n                                    <Form.Label column lg={2}>\n                                        End Date:\n                                    </Form.Label>\n                                    <Col lg={5}>\n                                        <Form.Control required type=\"datetime-local\" className=\"w-50\" />     \n                                    </Col>\n                                </Form.Group>\n                            </Form>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\">\n                                Close\n                            </Button>\n                            <Button variant=\"primary\">\n                                Create\n                            </Button>\n                        </Modal.Footer>\n                    </Modal> */}\n                </div>\n                );\n    }\n}\n\nexport default Votings;\n","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Home from './pages/Home';\nimport SignUp from './pages/SignUp';\nimport Login from './pages//Login';\nimport Messages from './pages/Messages';\nimport Tenants from './pages/Tenants';\nimport Votings from './pages/Votings';\nimport Issues from './pages/Issues';\nimport CommitteeDashboard from './pages/CommitteeDashboard';\nimport TenantDashboard from './pages/TenantDashboard';\n\nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false\n  };\n}\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        {/* <Messages isLoggedIn={this.state.isLoggedIn}/> */}\n        {/* <Issues isLoggedIn={this.state.isLoggedIn}/>\n        {/* <Home isLoggedIn={this.state.isLoggedIn}/> */}  */}\n        <CommitteeDashboard isLoggedIn={this.state.isLoggedIn}/>\n        {/* <Tenants isLoggedIn={this.state.isLoggedIn}/> */}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass IssuesAccordion extends React.Component {\n  \n    render() {\n        return (\n           <div className=\"IssuesAccordion\">\n               <Accordion>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"font-weight-bold\">\n                        Dynamic Issue Title With Dynamic Icon 2\n                        <i className=\"fas fa-exclamation-circle float-right\"></i>\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"0\">\n                            <Card.Body>\n                                <Row>\n                                    <Col className=\"border-2\">\n                                        <Row>\n                                            <Col lg={4}>\n                                                <Card.Img src=\"https://upload.wikimedia.org/wikipedia/commons/9/92/Backyardpool.jpg\"/>\n                                            </Col>\n                                            <Col lg={8}>                    \n                                                <Card.Text>\n                                                    <li className=\"list-group-item\"><span className=\"font-weight-bold\">Details: </span>***Dynamic Content for Issue details**</li>\n                                                    <li className=\"list-group-item\"><span  className=\"font-weight-bold\">Priority: </span>**Dynamic Content for Issue details**</li>\n                                                    <li className=\"list-group-item\"><span  className=\"font-weight-bold\">Status: </span>**Dynamic Status for Issue**</li>\n                                                </Card.Text>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col>\n                                        <Row>\n                                            <Col lg={8}>\n                                                <h6>Comments:</h6>\n                                                <Row className=\"Comment mt-4 my-2 mx-0\">                                            \n                                                    <Col lg={2} className=\"p-0\">\n                                                        <img className=\"rounded-circle avatar\" src=\"https://mdbootstrap.com/img/Photos/Avatars/avatar-10.jpg\" alt=\"Avatar\"></img>\n                                                    </Col>\n                                                    <Col lg={10} className=\"pl-0\">\n                                                        <p className=\"font-weight-bold\">Dynamic Tenant Name:</p>\n                                                        <p>Dynamic comment text</p>\n                                                    </Col>\n                                                </Row>\n                                                <Row className=\"Comment mt-4 my-2 mx-0\">                                            \n                                                    <Col lg={2} className=\"p-0\">\n                                                        <img className=\"rounded-circle avatar\" src=\"https://mdbootstrap.com/img/Photos/Avatars/avatar-10.jpg\" alt=\"Avatar\"></img>\n                                                    </Col>\n                                                    <Col lg={10} className=\"pl-0\">\n                                                        <p className=\"font-weight-bold\">Dynamic Tenant Name 2:</p>\n                                                        <p>Dynamic comment text 2</p>\n                                                        <div className=\"responses\">\n                                                            Dynamic responses\n                                                            <Row className=\"Comment mt-4 my-2 mx-0\">                                            \n                                                                <Col lg={2} className=\"p-0\">\n                                                                    <img className=\"rounded-circle avatar\" src=\"https://mdbootstrap.com/img/Photos/Avatars/avatar-10.jpg\" alt=\"Avatar\"></img>\n                                                                </Col>\n                                                                <Col lg={10} className=\"pl-0\">\n                                                                    <p className=\"font-weight-bold\">Dynamic responder Name 1 :</p>\n                                                                    <p>Dynamic response text 1</p>\n                                                                    <a href=\"#\">Reply</a>\n                                                                    <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Write your response\" className=\"mt-1\"/> \n                                                                </Col>\n                                                            </Row>\n                                                        </div>\n                                                        <a href=\"#\">Reply</a>\n                                                        <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Write your response\" className=\"mt-1\"/> \n                                                    </Col>\n                                                </Row>\n                                                <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Write a comment\" className=\"mt-4\"/>                   \n                                            </Col>\n                                            <Col lg={4} className=\"p-0 d-flex align-items-end justify-content-end\">\n                                                <Button variant=\"outline-dark\" className=\"mx-2 align-bottom\">Update</Button>\n                                                <Button variant=\"danger\" className=\"mx-2  align-bottom\">Delete</Button>\n                                            </Col>\n                                        </Row>                                                           \n                                    </Col>\n                                </Row>                             \n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>     \n                </Accordion>\n           </div>\n        );\n    }\n}\n\nexport default IssuesAccordion;","import React from 'react';\n//import Nav from 'react-bootstrap/Nav'\n//import Navbar from 'react-bootstrap/Navbar'\n//import Jumbotron from 'react-bootstrap/Jumbotron'\n//import Button from 'react-bootstrap/Button'\nimport IssuesNavbar from '../components/IssuesNavbar'\nimport RecordsDisplay from '../components/RecordsDisplay'\nimport IssuesAccordion from '../components/IssuesAccordion'\nimport Navigation from '../components/Navigation'\nimport { Container, Row, Col, Button, Modal, Form, Image } from 'react-bootstrap'\nimport PaginationNav from '../components/PaginationNav';\n\n\n//import Modal from 'react-bootstrap/Modal'\n//import Form from 'react-bootstrap/Form'\n//import Row from 'react-bootstrap/Row'\n//import Col from 'react-bootstrap/Col'\n\nclass Issues extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        activePage: 1,\n        totalItemsCount: 100 // This will come from the relevant page: Issues\\votings\\issues etc, where the total number of records will be stored in the page's state.\n      };\n      this.handlePageChange = this.handlePageChange.bind(this);\n    }\n    \n    handlePageChange(e) {\n      let val = parseInt(e.target.innerHTML);\n      let pageNumber = this.state.activePage;\n  \n      if (isNaN(val)) {\n        console.log('Not a number ' + val);\n        val = e.target.innerText;\n        if (val.includes(\"‹\")) {\n          console.log(\"Previous\");\n          pageNumber--;\n        }\n        else if (val.includes(\"›\")) {\n          console.log(\"Next\");\n          pageNumber++;\n        }\n        \n      }\n      else {\n        console.log('number ' + val);\n        pageNumber =  val;\n      }\n      console.log('active page is ' + pageNumber);\n      //this.state.activePage = pageNumber;\n      console.log(this.state.activePage);\n      //this.setState(this.state);\n      this.setState({activePage:pageNumber});\n      console.log(this.state.activePage);\n    }\n  \n    render() {\n      \n      return (\n                <div className=\"Issues h-100\">\n                    <Navigation isLoggedIn={this.props.isLoggedIn} pageName=\"Issues\"/>\n\n                    <Container className=\"py-6 px-5\">\n                        <IssuesNavbar />\n                        <div className=\"text-right pt-4 pb-1\">\n                            <a href=\"#\" style={{textDecoration:\"underline\", fontWeight:\"bolder\"}}>New Issue</a>\n                        </div>\n                        <RecordsDisplay hasRecords={true} recordType=\"issues\" /> \n                    </Container>\n                    \n                    {/* <Modal show=\"true\" size=\"lg\">\n                        <Modal.Header closeButton>\n                            <Modal.Title>New Issue</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <Form className=\"issueModalFrm\">\n                                <Form.Group as={Row} controlId=\"formNameTxt\">\n                                    <Form.Label column sm={2}>\n                                        Title:\n                                    </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Control required type=\"text\" />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formDetailsTxt\">\n                                    <Form.Label column sm={2}>\n                                        Details:\n                                    </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Control required as=\"textarea\" rows=\"3\" />\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formPrioritySelect\">\n                                    <Form.Label column sm={2}>\n                                        Priority:\n                                    </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Control required as=\"select\" className=\"priority-select\">\n                                            <option value=\"urgent\">Urgent</option>\n                                            <option value=\"important\">Important</option>\n                                            <option value=\"normal\">Normal</option>\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n\n                                <Form.Group as={Row} controlId=\"formImgControl\" className=\"align-items-center\">\n                                    <Form.Label column sm={2}>\n                                        Image URL:\n                                    </Form.Label>\n                                    <Col sm={7}>\n                                        <div className=\"custom-file\">\n                                            <input type=\"file\" className=\"custom-file-input\" id=\"customFile\" />\n                                            <label className=\"custom-file-label\" for=\"customFile\">Choose image</label>\n                                        </div>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Image src=\"https://interactive-examples.mdn.mozilla.net/media/examples/grapefruit-slice-332-332.jpg\" fluid/>\n                                    </Col>\n                                </Form.Group>\n                            </Form>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\">\n                                Close\n                            </Button>\n                            <Button variant=\"primary\">\n                                Create\n                            </Button>\n                        </Modal.Footer>\n                    </Modal> */}\n            </div>\n        );\n\n    }\n  }   \n\n\nexport default Issues;\n","import React from 'react';\n//import Nav from 'react-bootstrap/Nav'\n//import Navbar from 'react-bootstrap/Navbar'\n//import Jumbotron from 'react-bootstrap/Jumbotron'\n//import Button from 'react-bootstrap/Button'\n//import DashboardIssuesAccordion from '../components/RecordsDisplay'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport RecordsDisplay from '../components/RecordsDisplay';\nimport Navigation from '../components/Navigation';\nimport ChartsDisplay from '../components/ChartsDisplay';\nimport Badge from 'react-bootstrap/Badge';\nimport PieChart from 'react-minimal-pie-chart'\n\n\nclass TenantDashboard extends React.Component {\n  \n    render() {\n     \n      return (\n                <div className=\"Dashboard h-100\">\n                   <Navigation isLoggedIn={this.props.isLoggedIn} pageName=\"TenantDashboard\"/>\n\n                    <Container className=\"py-6 px-5\">\n                            <Row className=\"pb-2\">\n                                <Col className=\"border-2\">\n                                    <h2>New Messages <Badge variant=\"light\">0</Badge></h2> \n                                    {/* Who manages the hasRecords state? */}\n                                    <RecordsDisplay hasRecords={true} recordType=\"new messages\" /> \n                                </Col>\n                                <Col>\n                                    <h2>Pending Votings <Badge variant=\"light\">9</Badge></h2>\n                                     {/* Who manages the hasRecords state? */}\n                                    <RecordsDisplay hasRecords={true} recordType=\"pending votings\" />\n                                </Col>\n                            </Row>\n                           \n                            <Row className=\"pt-3 border-top\">\n                                <Col className=\"border-2\">\n                                    <h2>Voting Results</h2>\n                                    <ChartsDisplay hasRecords={true} recordType=\"voting results\" />                                         \n                                </Col>\n                              \n                                <Col className=\"border-2\">                   \n                                    <h2>New Issues <Badge variant=\"light\">2</Badge></h2>\n                                    <RecordsDisplay hasRecords={true} recordType=\"new issues\" />\n                                </Col>\n                                 <Col>                    \n                                    <h2>New Resolved Issues <Badge variant=\"light\">3</Badge></h2>\n                                    <RecordsDisplay hasRecords={true} recordType=\"new resolved issues\" />\n                                 </Col>\n                            </Row>\n                        </Container>\n            </div>\n        );\n\n    }\n  }   \n\n\nexport default TenantDashboard;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}